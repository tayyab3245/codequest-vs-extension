{
  "name": "codequest-coach",
  "displayName": "CodeQuest Coach",
  "description": "Voice-friendly LeetCode practice dashboard inside VS Code: patterns, timers, activity stats, streaks.",
  "version": "0.1.0",
  "publisher": "you",
  "engines": {
    "vscode": "^1.86.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onView:codequest.dashboard",
    "onCommand:codequest.startSession",
    "onCommand:codequest.endSession",
    "onCommand:codequest.markSolved",
    "onCommand:codequest.importLegacy",
    "onCommand:codequest.previewUiState",
    "onCommand:codequest.newProblem",
    "onCommand:codequest.openNextUnsolved"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codequest",
          "title": "CodeQuest",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "codequest": [
        {
          "type": "webview",
          "id": "codequest.dashboard",
          "name": "Dashboard",
          "icon": "$(graph)"
        }
      ]
    },
    "commands": [
      {
        "command": "codequest.startSession",
        "title": "CodeQuest: Start Session"
      },
      {
        "command": "codequest.endSession",
        "title": "CodeQuest: End Session"
      },
      {
        "command": "codequest.markSolved",
        "title": "CodeQuest: Mark Current Problem Solved"
      },
      {
        "command": "codequest.importLegacy",
        "title": "CodeQuest: Import Legacy Training File"
      },
      {
        "command": "codequest.previewUiState",
        "title": "CodeQuest: Preview UI State"
      },
      {
        "command": "codequest.newProblem",
        "title": "CodeQuest: New Problem"
      },
      {
        "command": "codequest.openNextUnsolved",
        "title": "CodeQuest: Open Next Unsolved Problem"
      },
      {
        "command": "codequest.buildCatalog",
        "title": "CodeQuest: Build Catalog (LeetCode Metadata)"
      },
      {
        "command": "codequest.refreshCatalog",
        "title": "CodeQuest: Refresh Catalog"
      },
      {
        "command": "codequest.updateExtension",
        "title": "CodeQuest: Update Extension (Dev)"
      }
    ],
    "configuration": {
      "title": "CodeQuest Coach",
      "properties": {
        "codequest.catalog.source": {
          "type": "string",
          "enum": ["cache", "bundled"],
          "default": "cache",
          "description": "Source for problem catalog: cache (from indexer) or bundled (static)"
        },
        "codequest.indexer.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable LeetCode metadata indexing (requires consent)"
        },
        "codequest.indexer.throttleMs": {
          "type": "number",
          "default": 750,
          "minimum": 100,
          "maximum": 5000,
          "description": "Throttle delay between API requests in milliseconds"
        },
        "codequest.pattern.questionsPerPattern": {
          "type": "number",
          "enum": [20, 40, 60, 100],
          "default": 20,
          "description": "Number of segments per pattern bar"
        },
        "codequest.generate.language": {
          "type": "string",
          "enum": ["javascript"],
          "default": "javascript",
          "description": "Language for generated problem stubs"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --platform=node --format=cjs",
    "compile": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --platform=node --format=cjs",
    "watch": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --platform=node --format=cjs --watch",
    "test": "mocha test/**/*.test.ts --require ts-node/register --timeout 5000",
    "test:unit": "mocha test/unit/*.test.ts --require ts-node/register --timeout 3000",
    "test:integration": "mocha test/integration/*.test.ts --require ts-node/register --timeout 10000",
    "test:watch": "mocha test/**/*.test.ts --require ts-node/register --watch --watch-files test/**/*.ts --watch-files src/**/*.ts"
  },
  "devDependencies": {
    "@types/chai": "^4.3.11",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.12.7",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.86.0",
    "chai": "^4.4.1",
    "esbuild": "^0.20.2",
    "mocha": "^10.2.0",
    "sinon": "^21.0.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  }
}
